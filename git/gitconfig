[include]
    path = ~/.gitconfig.local

[core]
    editor = vim
    excludesfile = ~/.gitignore

[color "status"]
    added = green
    changed = red
    untracked = yellow

[color "branch"]
    current = green bold
    local = green
    remote = yellow

[color "diff"]
    frag = cyan bold
    meta = yellow bold
    new = green
    old = red

[diff "bin"]
    textconv = hexdump -v -C

[push]
    default = current

[commit]
    template = ~/.gitmessage

[alias]
    a = add
    ap = add --patch

    alias = !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /

    b = branch
    bd = branch --delete
    bdf = branch --delete --force
    br = for-each-ref --sort=committerdate refs/heads/ refs/remotes \
    --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

    c = commit -v
    ca = commit --amend -v
    can = commit --amend --no-edit

    co = checkout
    cob = checkout -b

    cp = cherry-pick

    d = diff
    dc = diff --cached
    # Show diff between current state and $1 commits ago
    di = "!d() { git diff --patch-with-stat HEAD~$1; }; \
           git diff-index --quiet HEAD -- || clear; d"

    f = fetch

    g = grep
    gci = grep --count --ignore-case

    l = log --pretty=oneline --graph --abbrev-commit
    lp = log --patch

    m = merge
    md = merge --no-commit --no-ff

    pl = pull
    plr = pull --rebase

    pu = push
    # Push current branch to origin and track upstream
    pub = "!git push -u origin $(git symbolic-ref --short HEAD)"
    puf = push --force-with-lease

    r = rebase
    ri = rebase --interactive

    s = status

    sh = shortlog --summary --numbered

    st = stash
    stl = stash list
    stp = stash pop

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

# vim: set filetype=gitconfig :
